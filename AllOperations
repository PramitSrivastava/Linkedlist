class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def pushAtBeginning(self, data):
        new_Node = Node(data)
        if self.head is None:
            new_Node.next = self.head
            self.head = new_Node
        else:
            new_Node.next = self.head
            self.head = new_Node

    def pushAtEnding(self, data):
        new_Node = Node(data)
        if not self.head:
            self.head = new_Node
            return

        temp = self.head
        while temp.next:
            temp = temp.next

        temp.next = new_Node

    def pushAtGivenPosition(self, data, target_data):
        new_Node = Node(data)
        temp = self.head

        while temp:
            if temp.data == target_data:
                new_Node.next = temp.next
                temp.next = new_Node
                break
            temp = temp.next

    def deleteAtBeginning(self):
        if not self.head:
            print("List is empty")
            return
        if not self.head.next:
            self.head = None
        else:
            self.head = self.head.next

    def deleteAtEnd(self):
        if not self.head:
            print("List is empty")
            return
        if not self.head.next:
            self.head = None
        else:
            temp = self.head
            while temp.next.next:
                temp = temp.next
            temp.next = None

    def deleteAtSpecific(self, data_target):
        if not self.head:
            print('List is empty')
            return

        if self.head.data == data_target:
            self.head = self.head.next
            return

        temp = self.head
        while temp.next and temp.next.data != data_target:
            temp = temp.next

        if not temp.next:
            print("Number does not exist")
            return

        temp.next = temp.next.next

    def printList(self):
        temp = self.head
        while temp:
            print(temp.data, end=" -> ")
            temp = temp.next


llist = LinkedList()
llist.pushAtEnding(3)
llist.pushAtEnding(4)
llist.pushAtEnding(5)
llist.pushAtGivenPosition(6, 3)
llist.pushAtBeginning(1)
llist.pushAtBeginning(0)
llist.deleteAtBeginning()
llist.deleteAtEnd()
llist.deleteAtSpecific(1)
llist.printList()
